sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/m/MessageBox"
],
    /**
     * @param {typeof sap.ui.core.mvc.Controller} Controller
     */
    function (Controller, MessageBox) {
        "use strict";

        return Controller.extend("ns.crud.controller.Main", {
            /**
             * @override
             */
            //  https://blogs.sap.com/2020/01/13/batch-call-of-function-imports-in-sapui5/#:~:text=Usually%20batch%20methods%20are%20used,single%20batch%20call%20from%20UI5.

            getdocStatus: function () {
                debugger;

                var that = this;
                //This code was generated by the layout editor.
                var sFunction = "/docStatusSet";
                var sParameters = {
                    success: function (oData) {
                        debugger;
                        // that.assignHeader(oData);
                        var output = {
                            root: oData.results
                        };
                        var oModel = new sap.ui.model.json.JSONModel();
                        oModel.setData(output);
                        that.getView().setModel(oModel, "statusDoc");
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                debugger;
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);
            },
            onCRUD: function (oEvent) {
                this.getOwnerComponent().navBack();
            },
            onInit: function () {
                // @ts-ignore
                this.oRouter = this.getOwnerComponent().getRouter();
                // this.oRouter.getRoute("Table").attachMatched(this.routeTable, this);
                // this.onGetHeader();
                debugger;
                // this.getdocStatus();
                // var oModel = this.getOwnerComponent().getModel("sales");
                // var serviceUrl = "/sap/opu/odata/sap/ZKD_SALES_SRV/HeaderSet";
                // var oModel = sap.ui.model.odata.v2.oDataModel(serviceUrl);
                // var oModel = sap.ui.core().getModel("sales");
                // this.getView().setModel(oModel);
            },
            routeTable: function (oEvent) {
                // alert("Table Route");
            },
            /**
             *@memberOf nsTest.controller.Table
             */
            onGetData: function (oEvent) {
                debugger;
                this.getdocStatus();
                var that = this;
                debugger;
                // var aFilters = [];
                // var oFilterValue = new sap.ui.model.Filter("Auart", sap.ui.model.FilterOperator.EQ, "ZRCM");
                // aFilters.push(oFilterValue);
                //This code was generated by the layout editor.
                var sFunction = "/headerSet";
                var sParameters = {
                    // filters: aFilters,
                    // urlParameters: { "$top": "2", "$skip": "0" },
                    success: function (oData) {
                        debugger;
                        that.assignModel(oData.results);
                    },
                    error: function (error) {
                        debugger;
                        alert(error);

                    }
                };
                debugger;
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);

            },
            assignModel: function (results) {
                debugger;
                var output = {
                    root: results
                };
                var oModel = new sap.ui.model.json.JSONModel();
                oModel.setData(results);
                this.getView().byId("headerTab").setModel(oModel, "sales");
            },
            onGetHeader: function () {
                debugger;
                var tableContext = this.getView().byId("headerTab").getSelectedContexts();
                var selRow = tableContext[0].getObject().Vbeln;

                var that = this;
                //This code was generated by the layout editor.
                var sFunction = "/headerSet" + "('" + selRow + "')";
                var sParameters = {
                    success: function (oData) {
                        that.assignHeader(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);
            },
            assignHeader: function (results) {
                debugger;
                var output = {
                    root: results
                };
                var oModel = new sap.ui.model.json.JSONModel();
                oModel.setData(output);
                this.getView().byId("idHeader").setModel(oModel, "header");
            },
            assignItem: function (results) {
                // debugger;
                // var output = {
                //     root: results
                // };
                // var oModel = new sap.ui.model.json.JSONModel();
                // oModel.setData(output);
                // this.getView().setModel(oModel, "items");
                //Header
                debugger;
                var sHeader = {
                    root: results
                };
                var oHeaderModel = new sap.ui.model.json.JSONModel();
                oHeaderModel.setData(sHeader);
                this.getView().setModel(oHeaderModel, "header");
                //Item
                var sItem = {
                    root: results.headToItemNav
                };
                var oItemModel = new sap.ui.model.json.JSONModel();
                oItemModel.setData(sItem);
                this.getView().setModel(oItemModel, "items");
                // items>/root/headToItemNav/results
            },
            assignStatus: function (status) {
                debugger;
                var output = {
                    root: status
                };
                var oModel = new sap.ui.model.json.JSONModel();
                oModel.setData(output);
                this.getView().setModel(oModel, "status");
            },
            assignItemHeader: function (header) {
                debugger;
            },
            onGetDetail: function () {
                debugger;
                var oSel = this.getView().byId("headerTab").getSelectedItem();
                var oOrder = oSel.getBindingContext("sales").getObject().Vbeln;
                var that = this;

                //This code was generated by the layout editor.
                var sFunction = "/headerSet" + "('" + oOrder + "')";
                var sParameters = {
                    urlParameters: {
                        "$expand": "headerToItemNav"
                    },
                    success: function (oData) {
                        debugger;
                        that.assignHeader(oData);
                        that.assignItems(oData.headerToItemNav);
                        // that.assignItem(oData.headToItemNav.results);
                        // that.assignStatus(oData.Status);
                        // that.assignHeader(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                debugger;
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);
            },
            /**
             *@memberOf nsTest.controller.Table
             */
            onBack: function (oEvent) {
                //This code was generated by the layout editor.
            },
            onCreateHeader: function () {
                // var oModelSales = this.getView().getModel("Sales");
                // var oModelHeader = this.getView().getModel("header");
                debugger;
                var oModel = this.getView().getModel();
                var headerModel = this.getView().byId("idHeader").getModel("header");
                var payload = headerModel.getData().root;
                // var oModelItems = this.getView().getModel("items");
                // var payload = oModelItems.getProperty("/root");
                oModel.create("/headerSet", payload, {
                    success: function (oData, oResponce) {
                        debugger;
                        // response header
                        var hdrMessage = oResponce.headers["sap-message"];
                        var hdrMessageObject = JSON.parse(hdrMessage).details;
                        alert(hdrMessageObject);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                });
            },
            onCreateOrder: function () {
                debugger;
                var oModelSales = this.getView().getModel("Sales");
                var oModelHeader = this.getView().getModel("header");
                var oModelItem = this.getView().getModel("items");
                var oModelStatus = this.getView().getModel("status");
                var payload = oModelHeader.getProperty("/root");
                payload.ItemSet = oModelItem.getProperty("/root");
                payload.Status = oModelStatus.getProperty("/root");
                oModelSales.create("/Sales_HeaderSet", payload, {
                    success: function (oResponce) {
                        debugger;
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                });

            },
            onCreateMultiple: function () {
                debugger;
                var oModelSales = this.getView().getModel("Sales");
                var oModelHeader = this.getView().getModel("sales");
                // var oModelItem = this.getView().getModel("items");
                // var payload = oModelHeader.getProperty("/root");
                var encodedString = btoa(oModelHeader);
                var oMass = {};
                oMass.Key = "X";
                oMass.Value = encodedString;
                oModelSales.create("/MassUpdateSet", oMass, {
                    success: function (oResponce) {
                        debugger;
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                });
            },

            onGetStatus: function (oEvent) {
                debugger;
                var tableContext = this.getView().byId("headerTab").getSelectedContexts();
                var selRow = tableContext[0].getObject().Vbeln;

                var that = this;
                //This code was generated by the layout editor.
                var sFunction = "/headerSet" + "('" + selRow + "')";
                var sParameters = {
                    urlParameters: {
                        "$expand": "headerToStatusNav"
                    },
                    success: function (oData) {
                        that.assignHeader(oData);
                        that.assignStatus(oData.headerToStatusNav);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);
            },

            onItems: function (oEvent) {
                debugger;
                var tableContext = this.getView().byId("headerTab").getSelectedContexts();
                var selRow = tableContext[0].getObject().Vbeln;

                var that = this;
                //This code was generated by the layout editor.
                var sFunction = "/headerSet" + "('" + selRow + "')/headerToItemNav";
                var sParameters = {
                    success: function (oData) {
                        that.assignItems(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                var oModel = this.getView().getModel();
                oModel.read(sFunction, sParameters);
            },
            assignItems: function (results) {
                debugger;
                var output = {
                    root: results
                };
                var oModel = new sap.ui.model.json.JSONModel();
                oModel.setData(output);
                this.getView().byId("ItemTab").setModel(oModel, "items");
            },

            onCreateItem: function (oEvent) {
                debugger;
                var oModel = this.getView().getModel();
                var itemModel = this.getView().byId("ItemTab").getModel("items");
                var payload = itemModel.getData().root.results;
                var sGroupId = "batch";
                oModel.setUseBatch(true);
                oModel.setDeferredGroups([sGroupId]);
                var sFunction = "/itemSet";
                var sParameters = {
                    groupId: sGroupId,
                    success: function (oData) {
                        alert(" Multiple Record create Success");
                        // this.assignItems(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                for (var i = 0; i < payload.length; i++) {
                    oModel.create(sFunction, payload[i], sParameters);
                }
                //Finally, submit all the batch changes
                oModel.submitChanges(sParameters);
            },
            onCreateBoth: function (oEvent) {
                debugger;
                var headerModel = this.getView().byId("idHeader").getModel("header");
                var payload = headerModel.getData().root;

                var itemModel = this.getView().byId("ItemTab").getModel("items");
                payload.headerToItemNav = itemModel.getData().root.results;

                // var oOrder = oSel.getBindingContext("sales").getObject().Vbeln;
                // var that = this;

                //This code was generated by the layout editor.
                var sFunction = "/headerSet";
                var sParameters = {
                    // urlParameters: {
                    //     "$expand": "headerToItemNav"
                    // },
                    success: function (oData) {
                        debugger;
                        alert(" Deep Entity Success");
                        // that.assignHeader(oData);
                        // that.assignItems(oData.headerToItemNav);
                        // that.assignItem(oData.headToItemNav.results);
                        // that.assignStatus(oData.Status);
                        // that.assignHeader(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                debugger;
                var oModel = this.getView().getModel();
                oModel.create(sFunction, payload, sParameters);
            },

            onCallFunction: function (oEvent) {
                debugger;
                // var tableContext = this.getView().byId("headerTab").getSelectedContexts();
                // var selRow = tableContext[0].getObject().Vbeln;
                debugger;
                var tableContext = this.getView().byId("headerTab").getSelectedContexts();
                var sVbeln = tableContext[0].getObject().Vbeln;

                var that = this;
                //This code was generated by the layout editor.
                var sFunction = "getFare";
                var sParameters = {
                    urlParameters: {
                        doc: sVbeln,
                        type: "max"
                    },
                    success: function (oData) {
                        alert(oData.Netwr);
                        // that.assignItems(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                var oModel = this.getView().getModel();
                oModel.callFunction("/getFare", sParameters);
            },

            ongetMessage: function (oEvent) {
                var sFunction = "/getMessage";
                var sParameters = {
                    // urlParameters: {
                    //     doc: sVbeln,
                    //     type: "max"
                    // },
                    success: function (oData) {
                        alert("Done");
                        // that.assignItems(oData);
                    },
                    error: function (oError) {
                        debugger;
                        var errorMessage = JSON.parse(oError.responseText).error.message.value;
                        MessageBox.error(errorMessage);
                    }
                };
                debugger;
                var oModel = this.getView().getModel();
                oModel.callFunction(sFunction, sParameters);
            },
        });
    });
